{"version":3,"file":"static/js/83.1fd498a0.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Modal/Modal.styled.jsx","components/CorrectContactForm/CorrectContactForm.styled.jsx","components/CorrectContactForm/CorrectContactForm.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.jsx","components/Loader/Loader.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Error/Errror.styled.jsx","components/Error/Error.jsx","Pages/ContactPage/ContactPage.styled.jsx","Pages/ContactPage/ContactPage.jsx","Pages/ContactPage/HomePage/HomePage.styled.jsx","components/ContactForm/ContactForm.styled.jsx","components/UserBar/UserBar.styled.jsx","components/UserBar/UserBar.jsx"],"sourcesContent":["import React from 'react';\n\n\nimport {\n  FormContainer,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled.jsx';\n\n\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'components/redux/thunks.js';\nimport { getContacts } from 'components/redux/selectors.js';\n\n\nexport function ContactForm() {\n  const dispatch=useDispatch();\n  const contacts=useSelector(getContacts);\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form=e.target;\n    const isContact = contacts.filter(\n          contact =>\n            contact.name.toLowerCase() === e.target.elements.name.value.toLowerCase()\n        );\n        \n        if (isContact.length > 0) {\n              alert('The contact has already existed');\n              return;\n            } else {\n              dispatch(addContactThunk({\n                \n                name:e.target.elements.name.value,\n                number:e.target.elements.number.value,\n                \n              })) \n               form.reset();\n            }  \n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"...name\"\n          \n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"...number\"\n          \n        />\n      </FormLabel>\n      <FormButton type=\"submit\" onSubmit={handleSubmit}>\n        Add contact\n      </FormButton>\n    </FormContainer>\n  );\n}\n\n","import styled from '@emotion/styled';\n\nexport const ListContainer = styled.ol`\n  width: 600px;\n  border: solid 1px green;\n  padding: 20px;\n  box-shadow: 10px 5px 5px grey;\n  background-color: green;\n  font-weight: bold;\n  color: white;\n  margin-right:auto;\n  margin-left:auto;\n`;\nexport const ListItem = styled.li`\n  font-size: 25px;\n  font-weight: normal;\n  height: 40px;\n  margin-left: 20px;\n  margin-top: 25px;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  aling-items: center;\n`;\nexport const ListButtonContainer=styled.div`\ndisplay:flex;\ngap:20px;`\nexport const ListButton = styled.button`\n  font-size: 15px;\n  background-color: white;\n  color: green;\n  display: block;\n  margin-top: 15px;\n  border: solid 1px white;\n  min-width: 100px;\n  height: 40px;\n  box-shadow: 10px 5px 5px grey;\n  margin: 0;\n  font-weight: bold;\n\n  &:hover {\n    scale: 1.2;\n  }\n`;\n","import styled\n from \"@emotion/styled\";\nexport const Overlay=styled.div`position: fixed;\ntop: 0;\nleft: 0;\nwidth: 100vw;\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: rgba(0, 0, 0, 0.8);\nz-index: 1200;`\n    \n\n\nexport const Modal=styled.div`max-width: calc(100vw - 48px);\nmax-height: calc(100vh - 24px);` \n    \n","import styled from '@emotion/styled'\n\nexport const CorrectFormButtons=styled.div`\ndispaly:flex;\n\ngap:20px;\n`","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormContainer,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from 'components/ContactForm/ContactForm.styled';\nimport { CorrectFormButtons } from './CorrectContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { patchContactThunk } from 'components/redux/thunks';\nimport { getContacts } from 'components/redux/selectors';\nimport { useNavigate } from 'react-router-dom';\n\nexport const CorrectContactForm = ({ contact, onModalClick }) => {\n  const navigate=useNavigate();\n  const id = contact.find(item => {\n    return item.id;\n  });\n  \n\n  const [idContact] = useState(id.id);\n\n  const [name, setName] = useState(id.name);\n  const [number, setNumber] = useState(id.number);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const onChange = e => {\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n    }\n    if (e.target.name === 'number') {\n      setNumber(e.target.value);\n    }\n  };\n\n  const handleClick=e=>{\n    navigate('/personal_contacts');\n    onModalClick();\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isContact = contacts.filter(\n      contact =>\n        contact.name.toLowerCase() ===\n        e.target.elements.name.value.toLowerCase()\n    );\n\n    if (isContact.length > 0) {\n      alert('The contact has already existed');\n      return;\n    }\n    if (name.trim() !== '' && number.trim() !== '') {\n      dispatch(patchContactThunk({ idContact, name, number }));\n    }\n\n    onModalClick();\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          placeholder={name}\n          onChange={onChange}\n          required\n          value={name}\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onChange}\n          placeholder={number}\n          value={number}\n        />\n      </FormLabel>\n      <CorrectFormButtons>\n      <FormButton type=\"submit\">Correct contact</FormButton>\n      <FormButton type=\"button\" onClick={handleClick}>Back</FormButton>\n      </CorrectFormButtons>\n    </FormContainer>\n  );\n};\n\n\nCorrectContactForm.propTypes={\n  contact:PropTypes.array,\n  onModalClick:PropTypes.func,\n}","import { createPortal } from 'react-dom';\n\nimport { Overlay,Modal } from './Modal.styled';\nimport PropTypes from 'prop-types';\nimport { CorrectContactForm } from 'components/CorrectContactForm/CorrectContactForm';\n\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function ModalComponent({ contact,onModalClick }) {\n \n\n  return createPortal(\n    <Overlay >\n      <Modal>\n       <CorrectContactForm contact={contact} onModalClick={onModalClick}/>\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes={\n  contact:PropTypes.array,\n  onModalClick:PropTypes.func,\n}","\nimport { useDispatch } from 'react-redux';\n\n\nimport { useSelector } from 'react-redux';\n\nimport { ListContainer, ListItem, ListButton,ListButtonContainer } from './ContactList.styled.jsx';\nimport { deleteContactThunk} from 'components/redux/thunks.js';\nimport { getContacts, getFilter } from 'components/redux/selectors.js';\nimport {  useState } from 'react';\nimport { ModalComponent } from 'components/Modal/Modal.jsx';\n\nexport function ContactList() {\n  const filterState=useSelector(getFilter)\n  const contacts =useSelector(getContacts)\n  \n  const [showModal,setShowModal]=useState(false);\n  const [correctedContact,setCorrectedContact]=useState([])\n  \n \n  const normalizedFilter = filterState.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter));\n \n  const dispatch=useDispatch();\n  const handleClick = e => {\n    dispatch(deleteContactThunk(e.currentTarget.id));\n    \n  };\n  const handlePatchButtonClick=e=>{\n    const id=e.currentTarget.id;\n    const correctedContact=contacts.filter(contact=>contact.id===id)\n    setShowModal(true);\n    setCorrectedContact(correctedContact)\n    \n  }\n  const handleModalClick = () => {\n    setShowModal(false);\n  };\n\n \n  \n  return (\n    <ListContainer>\n      List of contacts\n      {visibleContacts.map(({ name, number, id }) => (\n        <ListItem id={id} key={id}>\n          {name}: {number}\n          <ListButtonContainer>\n          <ListButton\n            type=\"button\"\n            className=\"deleteContact\"\n            id={id}\n            onClick={handleClick}\n          >\n            Delete\n          </ListButton>\n          <ListButton\n            type=\"button\"\n            className=\"patchContact\"\n            id={id}\n            onClick={handlePatchButtonClick}\n          >\n           Correct\n          </ListButton>\n          </ListButtonContainer>\n          {showModal&&<ModalComponent onModalClick={handleModalClick} contact={correctedContact}/>}\n        </ListItem>\n      ))}\n    </ListContainer>\n  );\n}\n\n","import  { Bars } from  'react-loader-spinner'\n\nexport const Loader=()=>{\n    return(\n        <Bars\n  height=\"80\"\n  width=\"80\"\n  color=\"green\"\n  ariaLabel=\"bars-loading\"\n  wrapperStyle={{display: 'block',\n  marginLeft:\"260px\",\n  marginBottom: '30px',\n  marginTop:'30px'\n \n  }}\n  wrapperClass=\"\"\n  visible={true}\n/>\n\n    )\n}","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.form`\n  width: 600px;\n  border: solid 1px green;\n  padding: 20px;\n  box-shadow: 10px 5px 5px grey;\n  display: flex;\n  gap: 50px;\n  margin-right:auto;\n  margin-left:auto;\n`;\n\nexport const FilterInput = styled.input`\n  font-size: 15px;\n  color: green;\n  display: block;\n  border: solid 1px green;\n  outline: green;\n  height: 40px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FilterContainer, FilterInput } from './Filter.styled';\nimport { filterSet } from 'components/redux/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'components/redux/selectors';\n\n\n\n\nexport const Filter = () => {\n  const dispatch=useDispatch();\n  const filterState=useSelector(getFilter)\n\n  const handleChange=(e)=>{\n   const value=e.target.value\n    dispatch(filterSet(value));\n      \n  }\n  \n  return (\n    <FilterContainer>\n      Find contact by name\n      <FilterInput\n        type=\"text\"\n        placeholder=\"...name\"\n        onChange={handleChange}\n        value={filterState}\n        \n      />\n    </FilterContainer>\n  );\n};\n\n\n","import styled from '@emotion/styled';\n\nexport const Sentence=styled.div\n   ` margin-top:50px;\n    color:green;\n    font-size: 40px;\n    `\nexport const Notification=styled.p`\nmargin:40px;`","import { Sentence,Notification } from \"./Errror.styled\"\nexport const Error=()=>{\n    return(<Sentence><Notification>Sorry something went wrong</Notification></Sentence>)\n}","import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  width: 600px;\n  font-size:50px;\n  font-weight:bold;\n  margin-right:auto;\n  margin-left:auto;\n`;","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader'; \nimport { Filter } from 'components/Filter/Filter';\nimport { Error } from 'components/Error/Error';\nimport { fetchContactsThunk } from 'components/redux/thunks'; \nimport { getContacts, getError, getIsLoading } from 'components/redux/selectors';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { UserBar } from 'components/UserBar/UserBar';\nimport { Title } from './ContactPage.styled';\n\n const ContactPage=()=>{\n    const dispatch = useDispatch();\n    const loading = useSelector(getIsLoading);\n    const error = useSelector(getError);\n    const items = useSelector(getContacts);\n    \n   \n  \n    useEffect(() => {\n      \n    dispatch(fetchContactsThunk())\n    \n  }, [dispatch]);\n\n    return(<div\n        style={{\n          height: '100vh',\n          display: 'block',\n          minWidth: '600px',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          fontSize: 30,\n          color: 'grey',\n        }}\n      >\n        <UserBar/>\n        \n        <ContactForm />\n  \n        <Title>Contacts</Title>\n  \n        <Filter />\n        {loading && <Loader/>}\n        {error && <Error/>}\n        {items.length > 0 && !error && <ContactList />}\n      </div>)\n}\nexport default ContactPage;","import styled from '@emotion/styled';\n\nexport const HomePageWrapper=styled.div`\nmax-width:1100px;\nmargin:0 auto;\ndisplay:flex;\nmargin-top:50px;\njustify-content:space-between;\n`\n\nexport const TitleWrapper=styled.div`\ntext-align:center;\nmargin-top:75px;\ndisplay:flex;\nflex-direction:column;\nposition:relative;\n`\n\nexport const HomePageTitle=styled.h1`\nfont-size:40px;\nfont-weight:bold;\ncolor:green;`\n\nexport const HomePageSlogan=styled.h1`\nfont-size:40px;\nfont-weight:bold;\ncolor:grey;`\n\nexport const AuthButtons=styled.ul`\nfont-size:40px;\nfont-weight:bold;\ncolor:grey;\ndisplay:flex;\njustify-content:center;\ngap:100px;\nlist-style:none;\nposition:absolute;\nbottom:40px;\nmin-width:500px;\npadding:0px;\n`\n\nexport const SingUpButton=styled.button`\n\n font-size: 15px;\n  background-color: white;\n  color: green;\n  display: inline-block;\n  margin-top: 15px;\n  border: solid 1px white;\n  min-width: 150px;\n  height: 40px;\n  box-shadow: 10px 5px 5px grey;\n  margin: 0;\n  font-weight: bold;\n\n  &:hover {\n    scale: 1.2;\n  }\n\n`\n\nexport const LoginButton=styled.button`\n\n font-size: 15px;\n  background-color:  green;\n  color:white;\n  display: inline-block;\n  margin-top: 15px;\n  border: solid 1px white;\n  min-width: 150px;\n  height: 40px;\n  box-shadow: 10px 5px 5px grey;\n  margin: 0;\n  font-weight: bold;\n\n  &:hover {\n    scale: 1.2;\n  }\n\n`","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  width: 600px;\n  border: solid 1px green;\n  padding: 20px;\n  box-shadow: 10px 5px 5px grey;\n  // margin:0 auto;\n  margin-top:30px;\n  margin-bottom:0;\n  margin-left:auto;\n  margin-right:auto;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  font-weight: bold;\n  color: green;\n  \n`;\n\nexport const FormInput = styled.input`\n  font-size: 15px;\n  color: green;\n  display: block;\n  border: solid 1px green;\n  outline: green;\n  width:500px;\n  height: 40px;\n  margin-bottom:20px;\n  margin-top:10px;\n`;\n\nexport const FormButton = styled.button`\n  font-size: 15px;\n  background-color: green;\n  color: white;\n  display: inline-block;\n  margin-top: 15px;\n  border: solid 1px white;\n  min-width: 100px;\n  height: 40px;\n  box-shadow: 10px 5px 5px grey;\n  &:hover {\n    scale: 1.2;\n  }\n`;\n","\nimport styled from \"@emotion/styled\";\n\nexport const UserBarWrapper=styled.div`\n\nhight:30px;\nborder-bottom:solid grey 1px;\nbox-shadow: 10px 5px 5px grey;\npadding:20px 10px 20px 20px;\ndisplay:flex;\nalign-items:center;\njustify-content:space-between;\nmin-width:600px;\n`\n\nexport const UserBarSentence=styled.p`\nfont-size:20px;\nfont-weight:bold;\ncolor:green;\nmargin:0;\n`\n\n","import {  LogOutThunk } from 'components/redux/thunks';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LoginButton,SingUpButton } from 'Pages/ContactPage/HomePage/HomePage.styled';\nimport { UserBarWrapper, UserBarSentence } from './UserBar.styled';\nimport { getUserEmail } from 'components/redux/selectors';\nimport { useNavigate } from 'react-router-dom';\n// import { useEffect } from 'react';\n\nexport const UserBar = () => {\n  const dispatch = useDispatch();\n  const userEmail = useSelector(getUserEmail);\n  // const token=useSelector(state=>state.auth.token)\n  const navigate=useNavigate();\n  const handleClick = () => {\n    dispatch(LogOutThunk());\n  };\n\n  // useEffect(()=>{\n  //   if(token&&!userEmail){\n  //     dispatch(GetCurrentUserThunk()).unwrap().catch(()=>dispatch(LogOutThunk()))\n  //   }\n    \n  // },[dispatch,userEmail,token])\n  return (\n    <UserBarWrapper>\n      <UserBarSentence>hello! User {userEmail}</UserBarSentence>\n      <SingUpButton onClick={() => navigate('/personal_contacts')}>\n                My contacts\n              </SingUpButton>\n      <LoginButton type=\"button\" onClick={handleClick}>\n        Log Out\n      </LoginButton>\n      \n      \n    </UserBarWrapper>\n  );\n};\n\n// export default UserBar;\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","handleSubmit","e","preventDefault","form","target","filter","contact","name","toLowerCase","elements","value","length","alert","addContactThunk","number","reset","onSubmit","type","placeholder","required","pattern","title","ListContainer","styled","ListItem","ListButtonContainer","ListButton","Overlay","Modal","CorrectFormButtons","CorrectContactForm","onModalClick","navigate","useNavigate","id","find","item","useState","idContact","setName","setNumber","onChange","isContact","trim","patchContactThunk","onClick","modalRoot","document","querySelector","ModalComponent","createPortal","ContactList","filterState","getFilter","showModal","setShowModal","correctedContact","setCorrectedContact","normalizedFilter","visibleContacts","includes","handleClick","deleteContactThunk","currentTarget","handlePatchButtonClick","handleModalClick","map","className","propTypes","PropTypes","Loader","height","width","color","ariaLabel","wrapperStyle","display","marginLeft","marginBottom","marginTop","wrapperClass","visible","FilterContainer","FilterInput","Filter","filterSet","Sentence","Notification","Error","Title","loading","getIsLoading","error","getError","items","useEffect","fetchContactsThunk","style","minWidth","marginRight","fontSize","UserBar","HomePageWrapper","TitleWrapper","HomePageTitle","HomePageSlogan","AuthButtons","SingUpButton","LoginButton","FormContainer","FormLabel","FormInput","FormButton","UserBarWrapper","UserBarSentence","userEmail","getUserEmail","LogOutThunk"],"sourceRoot":""}