{"version":3,"file":"static/js/485.da19747a.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/Modal/Modal.styled.jsx","components/CorrectContactForm/CorrectContactForm.styled.jsx","components/CorrectContactForm/CorrectContactForm.jsx","components/Modal/Modal.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Error/Errror.styled.jsx","components/Error/Error.jsx","Pages/ContactPage/ContactPage.styled.jsx","Pages/ContactPage/ContactPage.jsx","components/ContactForm/ContactForm.styled.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import React from 'react';\n\n\nimport {\n  FormContainer,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from './ContactForm.styled.jsx';\n\n\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactThunk } from 'components/redux/thunks.js';\nimport { getContacts } from 'components/redux/selectors.js';\n\n\nexport function ContactForm() {\n  const dispatch=useDispatch();\n  const contacts=useSelector(getContacts);\n\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form=e.target;\n    const isContact = contacts.filter(\n          contact =>\n            contact.name.toLowerCase() === e.target.elements.name.value.toLowerCase()\n        );\n        \n        if (isContact.length > 0) {\n              alert('The contact has already existed');\n              return;\n            } else {\n              dispatch(addContactThunk({\n                \n                name:e.target.elements.name.value,\n                number:e.target.elements.number.value,\n                \n              })) \n               form.reset();\n            }  \n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"...name\"\n          \n          required\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"...number\"\n          \n        />\n      </FormLabel>\n      <FormButton type=\"submit\" onSubmit={handleSubmit}>\n        Add contact\n      </FormButton>\n    </FormContainer>\n  );\n}\n\n","import styled from '@emotion/styled';\n\nexport const ListContainer = styled.ol`\n  width: 600px;\n  border: solid 1px green;\n  padding: 20px;\n  box-shadow: 10px 5px 5px grey;\n  background-color: green;\n  font-weight: bold;\n  color: white;\n  margin-right:auto;\n  margin-left:auto;\n`;\nexport const ListItem = styled.li`\n  font-size: 25px;\n  font-weight: normal;\n  height: 40px;\n  margin-left: 20px;\n  margin-top: 25px;\n  color: white;\n  display: flex;\n  justify-content: space-between;\n  aling-items: center;\n`;\nexport const ListButtonContainer=styled.div`\ndisplay:flex;\ngap:20px;`\nexport const ListButton = styled.button`\n  font-size: 15px;\n  background-color: white;\n  color: green;\n  display: block;\n  margin-top: 15px;\n  border: solid 1px white;\n  min-width: 100px;\n  height: 40px;\n  box-shadow: 10px 5px 5px grey;\n  margin: 0;\n  font-weight: bold;\n\n  &:hover {\n    scale: 1.2;\n  }\n`;\n","import styled\n from \"@emotion/styled\";\nexport const Overlay=styled.div`position: fixed;\ntop: 0;\nleft: 0;\nwidth: 100vw;\nheight: 100vh;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\nbackground-color: rgba(0, 0, 0, 0.8);\nz-index: 1200;`\n    \n\n\nexport const Modal=styled.div`max-width: calc(100vw - 48px);\nmax-height: calc(100vh - 24px);` \n    \n","import styled from '@emotion/styled'\n\nexport const CorrectFormButtons=styled.ul`\ndisplay:flex;\ngap:20px;\npadding:0;\n`\nexport const CorrectFormButtonsItem=styled.li`\ndisplay:inline-block;`","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FormContainer,\n  FormLabel,\n  FormInput,\n  FormButton,\n} from 'components/ContactForm/ContactForm.styled';\nimport { CorrectFormButtons,CorrectFormButtonsItem } from './CorrectContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { patchContactThunk } from 'components/redux/thunks';\nimport { getContacts } from 'components/redux/selectors';\nimport { useNavigate } from 'react-router-dom';\n\nexport const CorrectContactForm = ({ contact, onModalClick }) => {\n  const navigate=useNavigate();\n  const id = contact.find(item => {\n    return item.id;\n  });\n  \n\n  const [idContact] = useState(id.id);\n\n  const [name, setName] = useState(id.name);\n  const [number, setNumber] = useState(id.number);\n  const dispatch = useDispatch();\n  const contacts = useSelector(getContacts);\n\n  const onChange = e => {\n    if (e.target.name === 'name') {\n      setName(e.target.value);\n    }\n    if (e.target.name === 'number') {\n      setNumber(e.target.value);\n    }\n  };\n\n  const handleClick=e=>{\n    navigate('/personal_contacts');\n    onModalClick();\n  }\n  const handleSubmit = e => {\n    e.preventDefault();\n    const isContact = contacts.filter(\n      contact =>\n        contact.name.toLowerCase() ===\n        e.target.elements.name.value.toLowerCase()\n    );\n\n    if (isContact.length > 0) {\n      alert('The contact has already existed');\n      return;\n    }\n    if (name.trim() !== '' && number.trim() !== '') {\n      dispatch(patchContactThunk({ idContact, name, number }));\n    }\n\n    onModalClick();\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <FormLabel>\n        Name\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          placeholder={name}\n          onChange={onChange}\n          required\n          value={name}\n        />\n      </FormLabel>\n      <FormLabel>\n        Number\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={onChange}\n          placeholder={number}\n          value={number}\n        />\n      </FormLabel>\n      <CorrectFormButtons>\n        <CorrectFormButtonsItem> <FormButton type=\"submit\">Correct </FormButton></CorrectFormButtonsItem>\n        <CorrectFormButtonsItem><FormButton type=\"button\" onClick={handleClick}>Back</FormButton></CorrectFormButtonsItem>\n      </CorrectFormButtons>\n    </FormContainer>\n  );\n};\n\n\nCorrectContactForm.propTypes={\n  contact:PropTypes.array,\n  onModalClick:PropTypes.func,\n}","import { createPortal } from 'react-dom';\n\nimport { Overlay,Modal } from './Modal.styled';\nimport PropTypes from 'prop-types';\nimport { CorrectContactForm } from 'components/CorrectContactForm/CorrectContactForm';\n\n\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport function ModalComponent({ contact,onModalClick }) {\n \n\n  return createPortal(\n    <Overlay >\n      <Modal>\n       <CorrectContactForm contact={contact} onModalClick={onModalClick}/>\n      </Modal>\n    </Overlay>,\n    modalRoot\n  );\n}\n\nModal.propTypes={\n  contact:PropTypes.array,\n  onModalClick:PropTypes.func,\n}","\nimport { useDispatch } from 'react-redux';\n\n\nimport { useSelector } from 'react-redux';\n\nimport { ListContainer, ListItem, ListButton,ListButtonContainer } from './ContactList.styled.jsx';\nimport { deleteContactThunk} from 'components/redux/thunks.js';\nimport { getContacts, getFilter } from 'components/redux/selectors.js';\nimport {  useState } from 'react';\nimport { ModalComponent } from 'components/Modal/Modal.jsx';\n\nexport function ContactList() {\n  const filterState=useSelector(getFilter)\n  const contacts =useSelector(getContacts)\n  \n  const [showModal,setShowModal]=useState(false);\n  const [correctedContact,setCorrectedContact]=useState([])\n  \n \n  const normalizedFilter = filterState.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter));\n \n  const dispatch=useDispatch();\n  const handleClick = e => {\n    dispatch(deleteContactThunk(e.currentTarget.id));\n    \n  };\n  const handlePatchButtonClick=e=>{\n    const id=e.currentTarget.id;\n    const correctedContact=contacts.filter(contact=>contact.id===id)\n    setShowModal(true);\n    setCorrectedContact(correctedContact)\n    \n  }\n  const handleModalClick = () => {\n    setShowModal(false);\n  };\n\n \n  \n  return (\n    <ListContainer>\n      List of contacts\n      {visibleContacts.map(({ name, number, id }) => (\n        <ListItem id={id} key={id}>\n          {name}: {number}\n          <ListButtonContainer>\n          <ListButton\n            type=\"button\"\n            className=\"deleteContact\"\n            id={id}\n            onClick={handleClick}\n          >\n            Delete\n          </ListButton>\n          <ListButton\n            type=\"button\"\n            className=\"patchContact\"\n            id={id}\n            onClick={handlePatchButtonClick}\n          >\n           Correct\n          </ListButton>\n          </ListButtonContainer>\n          {showModal&&<ModalComponent onModalClick={handleModalClick} contact={correctedContact}/>}\n        </ListItem>\n      ))}\n    </ListContainer>\n  );\n}\n\n","import styled from '@emotion/styled';\n\nexport const FilterContainer = styled.form`\n  width: 600px;\n  border: solid 1px green;\n  padding: 20px;\n  box-shadow: 10px 5px 5px grey;\n  display: flex;\n  gap: 50px;\n  margin-right:auto;\n  margin-left:auto;\n`;\n\nexport const FilterInput = styled.input`\n  font-size: 15px;\n  color: green;\n  display: block;\n  border: solid 1px green;\n  outline: green;\n  height: 40px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { FilterContainer, FilterInput } from './Filter.styled';\nimport { filterSet } from 'components/redux/filterSlice';\nimport { useSelector } from 'react-redux';\nimport { getFilter } from 'components/redux/selectors';\n\n\n\n\nexport const Filter = () => {\n  const dispatch=useDispatch();\n  const filterState=useSelector(getFilter)\n\n  const handleChange=(e)=>{\n   const value=e.target.value\n    dispatch(filterSet(value));\n      \n  }\n  \n  return (\n    <FilterContainer>\n      Find contact by name\n      <FilterInput\n        type=\"text\"\n        placeholder=\"...name\"\n        onChange={handleChange}\n        value={filterState}\n        \n      />\n    </FilterContainer>\n  );\n};\n\n\n","import styled from '@emotion/styled';\n\nexport const Sentence=styled.div\n   ` margin-top:50px;\n    color:green;\n    font-size: 40px;\n    `\nexport const Notification=styled.p`\nmargin:40px;`","import { Sentence,Notification } from \"./Errror.styled\"\nexport const Error=()=>{\n    return(<Sentence><Notification>Sorry something went wrong</Notification></Sentence>)\n}","import styled from '@emotion/styled';\n\nexport const Title = styled.p`\n  width: 600px;\n  font-size:50px;\n  font-weight:bold;\n  margin-right:auto;\n  margin-left:auto;\n`;\n\nexport const TitleSpan=styled.span`\ncolor:green;`","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Loader } from 'components/Loader/Loader'; \nimport { Filter } from 'components/Filter/Filter';\nimport { Error } from 'components/Error/Error';\nimport { fetchContactsThunk } from 'components/redux/thunks'; \nimport { getContacts, getError, getIsLoading, getUserEmail } from 'components/redux/selectors';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { Title,TitleSpan } from './ContactPage.styled';\n\n const ContactPage=()=>{\n    const dispatch = useDispatch();\n    const loading = useSelector(getIsLoading);\n    const userEmail=useSelector(getUserEmail)\n    const error = useSelector(getError);\n    const items = useSelector(getContacts);\n    \n   \n  \n    useEffect(() => {\n      \n    dispatch(fetchContactsThunk())\n    \n  }, [dispatch]);\n\n    return(<div\n        style={{\n          height: '100vh',\n          display: 'block',\n          minWidth: '600px',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          fontSize: 30,\n          color: 'grey',\n        }}\n      >\n        \n        \n        <ContactForm />\n  \n        <Title><TitleSpan>{userEmail}'s</TitleSpan> contacts</Title>\n  \n        <Filter />\n        {loading && <Loader/>}\n        {error && <Error/>}\n        {items.length > 0 && !error && <ContactList />}\n      </div>)\n}\nexport default ContactPage;","import styled from '@emotion/styled';\n\nexport const FormContainer = styled.form`\n  width: 600px;\n  border: solid 1px green;\n  padding: 20px;\n  box-shadow: 10px 5px 5px grey;\n  // margin:0 auto;\n  margin-top:30px;\n  margin-bottom:0;\n  margin-left:auto;\n  margin-right:auto;\n`;\n\nexport const FormLabel = styled.label`\n  font-size: 20px;\n  font-weight: bold;\n  color: green;\n  \n`;\n\nexport const FormInput = styled.input`\n  font-size: 15px;\n  color: green;\n  display: block;\n  border: solid 1px green;\n  outline: green;\n  width:500px;\n  height: 40px;\n  margin-bottom:20px;\n  margin-top:10px;\n`;\n\nexport const FormButton = styled.button`\n  font-size: 15px;\n  background-color: green;\n  color: white;\n  display: inline-block;\n  margin-top: 15px;\n  border: solid 1px white;\n  min-width: 100px;\n  height: 40px;\n  box-shadow: 10px 5px 5px grey;\n  &:hover {\n    scale: 1.2;\n  }\n`;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["ContactForm","dispatch","useDispatch","contacts","useSelector","getContacts","handleSubmit","e","preventDefault","form","target","filter","contact","name","toLowerCase","elements","value","length","alert","addContactThunk","number","reset","onSubmit","type","placeholder","required","pattern","title","ListContainer","styled","ListItem","ListButtonContainer","ListButton","Overlay","Modal","CorrectFormButtons","CorrectFormButtonsItem","CorrectContactForm","onModalClick","navigate","useNavigate","id","find","item","useState","idContact","setName","setNumber","onChange","isContact","trim","patchContactThunk","onClick","modalRoot","document","querySelector","ModalComponent","createPortal","ContactList","filterState","getFilter","showModal","setShowModal","correctedContact","setCorrectedContact","normalizedFilter","visibleContacts","includes","handleClick","deleteContactThunk","currentTarget","handlePatchButtonClick","handleModalClick","map","className","propTypes","PropTypes","FilterContainer","FilterInput","Filter","filterSet","Sentence","Notification","Error","Title","TitleSpan","loading","getIsLoading","userEmail","getUserEmail","error","getError","items","useEffect","fetchContactsThunk","style","height","display","minWidth","marginLeft","marginRight","fontSize","color","Loader","FormContainer","FormLabel","FormInput","FormButton","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}