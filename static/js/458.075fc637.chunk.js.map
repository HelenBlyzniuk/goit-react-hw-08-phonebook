{"version":3,"file":"static/js/458.075fc637.chunk.js","mappings":"0RA0DA,EAzCkB,WAMhB,IAAMA,GAASC,EAAAA,EAAAA,eAOf,OALEC,EAAAA,EAAAA,YAAU,WACVF,GAASG,EAAAA,EAAAA,MACV,GAAC,CAACH,KAID,+BAEE,UAAC,KAAD,YAEE,gBAAKI,IAAKC,EAAKC,IAAI,YAAYC,UAAU,kBACzC,UAAC,KAAD,YACE,SAAC,KAAD,UAAe,4BACf,SAAC,KAAD,UAAgB,qCAkBzB,C","sources":["Pages/ContactPage/HomePage/HomePage.jsx"],"sourcesContent":["// import { useNavigate } from 'react-router-dom';\nimport React, { useEffect } from 'react';\n\nimport tel from '../../../images/tel.jpg';\nimport {\n  HomePageWrapper,\n  TitleWrapper,\n  HomePageTitle,\n  HomePageSlogan,\n  \n} from './HomePage.styled';\n// import { UserBar } from 'components/UserBar/UserBar';\n\nimport { useDispatch} from 'react-redux';\nimport { GetCurrentUserThunk } from 'components/redux/thunks';\n\n\n const HomePage = () => {\n  // const navigate = useNavigate();\n  // const isLoggedIn = useSelector(getIsLoggedIn);\n  // const user = useSelector(getUser);\n  \n  \n  const dispatch=useDispatch();\n\n    useEffect(()=>{\n    dispatch(GetCurrentUserThunk());\n  },[dispatch])\n  \n \n  return (\n    <>\n      {/* {isLoggedIn && user.email!=='' &&<UserBar/>} */}\n      <HomePageWrapper>\n      \n        <img src={tel} alt=\"telephone\" className=\"homePageImg \" />\n        <TitleWrapper>\n          <HomePageTitle>Create your Phonebook:</HomePageTitle>\n          <HomePageSlogan>Orchestrate your contacts</HomePageSlogan>\n         {/* {!isLoggedIn&&<AuthButtons>\n            <li className=\"authBtn\">\n              <SingUpButton onClick={() => navigate('/signup')}>\n                Sign Up\n              </SingUpButton>\n            </li>\n            <li className=\"authBtn\">\n              <LoginButton type=\"button\" onClick={() => navigate('/login')}>\n                Log In\n              </LoginButton>\n            </li>\n          </AuthButtons>}  */}\n          \n        </TitleWrapper>\n      </HomePageWrapper>\n    </>\n  );\n};\n\nexport default HomePage ;"],"names":["dispatch","useDispatch","useEffect","GetCurrentUserThunk","src","tel","alt","className"],"sourceRoot":""}